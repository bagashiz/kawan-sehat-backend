// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package postgres

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CountAccountBookmarks(ctx context.Context, accountID uuid.UUID) (int64, error)
	CountCommentsByPostID(ctx context.Context, postID uuid.UUID) (int64, error)
	CountPosts(ctx context.Context) (int64, error)
	CountPostsByAccountID(ctx context.Context, accountID uuid.UUID) (int64, error)
	CountPostsByTopicID(ctx context.Context, topicID uuid.UUID) (int64, error)
	CountRepliesByCommentID(ctx context.Context, commentID uuid.UUID) (int64, error)
	CountTopics(ctx context.Context) (int64, error)
	CountTopicsByAccountID(ctx context.Context, accountID uuid.UUID) (int64, error)
	DeleteAccountTopic(ctx context.Context, arg DeleteAccountTopicParams) (int64, error)
	DeleteBookmark(ctx context.Context, arg DeleteBookmarkParams) (int64, error)
	DeleteComment(ctx context.Context, id uuid.UUID) (int64, error)
	DeletePost(ctx context.Context, id uuid.UUID) (int64, error)
	DeleteReply(ctx context.Context, id uuid.UUID) (int64, error)
	DeleteTopic(ctx context.Context, id uuid.UUID) (int64, error)
	InsertAccount(ctx context.Context, arg InsertAccountParams) error
	InsertAccountTopic(ctx context.Context, arg InsertAccountTopicParams) error
	InsertBookmark(ctx context.Context, arg InsertBookmarkParams) error
	InsertComment(ctx context.Context, arg InsertCommentParams) error
	InsertPost(ctx context.Context, arg InsertPostParams) error
	InsertReply(ctx context.Context, arg InsertReplyParams) error
	InsertTopic(ctx context.Context, arg InsertTopicParams) error
	InsertVoteComment(ctx context.Context, arg InsertVoteCommentParams) error
	InsertVotePost(ctx context.Context, arg InsertVotePostParams) error
	InsertVoteReply(ctx context.Context, arg InsertVoteReplyParams) error
	SelectAccountByID(ctx context.Context, id uuid.UUID) (Account, error)
	SelectAccountByUsername(ctx context.Context, username string) (Account, error)
	SelectAllPosts(ctx context.Context, accountID uuid.UUID) ([]SelectAllPostsRow, error)
	SelectAllPostsPaginated(ctx context.Context, arg SelectAllPostsPaginatedParams) ([]SelectAllPostsPaginatedRow, error)
	SelectAllTopics(ctx context.Context) ([]Topic, error)
	SelectAllTopicsPaginated(ctx context.Context, arg SelectAllTopicsPaginatedParams) ([]Topic, error)
	SelectBookmarksByAccountID(ctx context.Context, accountID uuid.UUID) ([]SelectBookmarksByAccountIDRow, error)
	SelectBookmarksByAccountIDPaginated(ctx context.Context, arg SelectBookmarksByAccountIDPaginatedParams) ([]SelectBookmarksByAccountIDPaginatedRow, error)
	SelectCommentByID(ctx context.Context, id uuid.UUID) (Comment, error)
	SelectCommentsByPostID(ctx context.Context, arg SelectCommentsByPostIDParams) ([]SelectCommentsByPostIDRow, error)
	SelectCommentsByPostIDPaginated(ctx context.Context, arg SelectCommentsByPostIDPaginatedParams) ([]SelectCommentsByPostIDPaginatedRow, error)
	SelectPostByID(ctx context.Context, arg SelectPostByIDParams) (SelectPostByIDRow, error)
	SelectPostsByAccountID(ctx context.Context, accountID uuid.UUID) ([]SelectPostsByAccountIDRow, error)
	SelectPostsByAccountIDPaginated(ctx context.Context, arg SelectPostsByAccountIDPaginatedParams) ([]SelectPostsByAccountIDPaginatedRow, error)
	SelectPostsByTopicID(ctx context.Context, arg SelectPostsByTopicIDParams) ([]SelectPostsByTopicIDRow, error)
	SelectPostsByTopicIDPaginated(ctx context.Context, arg SelectPostsByTopicIDPaginatedParams) ([]SelectPostsByTopicIDPaginatedRow, error)
	SelectRepliesByCommentID(ctx context.Context, arg SelectRepliesByCommentIDParams) ([]SelectRepliesByCommentIDRow, error)
	SelectRepliesByCommentIDPaginated(ctx context.Context, arg SelectRepliesByCommentIDPaginatedParams) ([]SelectRepliesByCommentIDPaginatedRow, error)
	SelectReplyByID(ctx context.Context, id uuid.UUID) (Reply, error)
	SelectSumVotesByCommentID(ctx context.Context, commentID pgtype.UUID) (interface{}, error)
	SelectSumVotesByPostID(ctx context.Context, postID pgtype.UUID) (interface{}, error)
	SelectSumVotesByReplyID(ctx context.Context, replyID pgtype.UUID) (interface{}, error)
	SelectTopicByID(ctx context.Context, id uuid.UUID) (Topic, error)
	SelectTopicsByAccountID(ctx context.Context, accountID uuid.UUID) ([]Topic, error)
	SelectTopicsByAccountIDPaginated(ctx context.Context, arg SelectTopicsByAccountIDPaginatedParams) ([]Topic, error)
	SelectVoteByCommentID(ctx context.Context, arg SelectVoteByCommentIDParams) (int16, error)
	SelectVoteByPostID(ctx context.Context, arg SelectVoteByPostIDParams) (int16, error)
	SelectVoteByReplyID(ctx context.Context, arg SelectVoteByReplyIDParams) (int16, error)
	UpdateAccount(ctx context.Context, arg UpdateAccountParams) error
	UpdatePost(ctx context.Context, arg UpdatePostParams) error
	UpdateTopic(ctx context.Context, arg UpdateTopicParams) error
	UpdateVoteComment(ctx context.Context, arg UpdateVoteCommentParams) error
	UpdateVotePost(ctx context.Context, arg UpdateVotePostParams) error
	UpdateVoteReply(ctx context.Context, arg UpdateVoteReplyParams) error
}

var _ Querier = (*Queries)(nil)
